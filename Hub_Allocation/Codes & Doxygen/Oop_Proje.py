"""
This code creates a clustering application using the PyQt5 library.
It also uses image manipulation libraries such as skimage, matplotlib, and PIL.
These code blocks are compiled to create interfaces.
"""

import numpy as np
import os
import matplotlib.pyplot as plt
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from PyQt5 import *
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1307, 827)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Icons/icons8-hub-64.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.formLayout = QtWidgets.QFormLayout(self.centralwidget)
        self.formLayout.setObjectName("formLayout")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.toolButton = QtWidgets.QToolButton(self.centralwidget)
        self.toolButton.setMinimumSize(QtCore.QSize(40, 40))
        self.toolButton.setMaximumSize(QtCore.QSize(40, 40))
        self.toolButton.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("Icons/icons8-opened-folder-48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButton.setIcon(icon1)
        self.toolButton.setObjectName("toolButton")
        self.horizontalLayout_6.addWidget(self.toolButton)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setMaximumSize(QtCore.QSize(16777215, 70))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.toolButton_I1 = QtWidgets.QToolButton(self.groupBox)
        self.toolButton_I1.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("Icons/icons8-save-48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButton_I1.setIcon(icon2)
        self.toolButton_I1.setObjectName("toolButton_I1")
        self.horizontalLayout.addWidget(self.toolButton_I1)
        self.toolButton_I2 = QtWidgets.QToolButton(self.groupBox)
        self.toolButton_I2.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("Icons/icons8-export-48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButton_I2.setIcon(icon3)
        self.toolButton_I2.setObjectName("toolButton_I2")
        self.horizontalLayout.addWidget(self.toolButton_I2)
        self.toolButton_I3 = QtWidgets.QToolButton(self.groupBox)
        self.toolButton_I3.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("Icons/icons8-erase-48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButton_I3.setIcon(icon4)
        self.toolButton_I3.setObjectName("toolButton_I3")
        self.horizontalLayout.addWidget(self.toolButton_I3)
        self.toolButton_I4 = QtWidgets.QToolButton(self.groupBox)
        self.toolButton_I4.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("Icons/icons8-return-48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButton_I4.setIcon(icon5)
        self.toolButton_I4.setObjectName("toolButton_I4")
        self.horizontalLayout.addWidget(self.toolButton_I4)
        self.toolButton_I5 = QtWidgets.QToolButton(self.groupBox)
        self.toolButton_I5.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("Icons/icons8-forward-arrow-48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButton_I5.setIcon(icon6)
        self.toolButton_I5.setObjectName("toolButton_I5")
        self.horizontalLayout.addWidget(self.toolButton_I5)
        self.gridLayout.addLayout(self.horizontalLayout, 0, 0, 1, 1)
        self.horizontalLayout_5.addWidget(self.groupBox)
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setMaximumSize(QtCore.QSize(16777215, 70))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_2.setFont(font)
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.toolButton_F1 = QtWidgets.QToolButton(self.groupBox_2)
        self.toolButton_F1.setText("")
        self.toolButton_F1.setIcon(icon2)
        self.toolButton_F1.setObjectName("toolButton_F1")
        self.horizontalLayout_2.addWidget(self.toolButton_F1)
        self.toolButton_F2 = QtWidgets.QToolButton(self.groupBox_2)
        self.toolButton_F2.setText("")
        self.toolButton_F2.setIcon(icon3)
        self.toolButton_F2.setObjectName("toolButton_F2")
        self.horizontalLayout_2.addWidget(self.toolButton_F2)
        self.toolButton_F3 = QtWidgets.QToolButton(self.groupBox_2)
        self.toolButton_F3.setText("")
        self.toolButton_F3.setIcon(icon4)
        self.toolButton_F3.setObjectName("toolButton_F3")
        self.horizontalLayout_2.addWidget(self.toolButton_F3)
        self.toolButton_F4 = QtWidgets.QToolButton(self.groupBox_2)
        self.toolButton_F4.setText("")
        self.toolButton_F4.setIcon(icon5)
        self.toolButton_F4.setObjectName("toolButton_F4")
        self.horizontalLayout_2.addWidget(self.toolButton_F4)
        self.toolButton_F5 = QtWidgets.QToolButton(self.groupBox_2)
        self.toolButton_F5.setText("")
        self.toolButton_F5.setIcon(icon6)
        self.toolButton_F5.setObjectName("toolButton_F5")
        self.horizontalLayout_2.addWidget(self.toolButton_F5)
        self.gridLayout_2.addLayout(self.horizontalLayout_2, 0, 0, 1, 1)
        self.horizontalLayout_5.addWidget(self.groupBox_2)
        self.groupBox_3 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_3.setMaximumSize(QtCore.QSize(16777215, 70))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_3.setFont(font)
        self.groupBox_3.setObjectName("groupBox_3")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.groupBox_3)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.toolButton_C1 = QtWidgets.QToolButton(self.groupBox_3)
        self.toolButton_C1.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("Icons/icons8-cluster-64.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButton_C1.setIcon(icon7)
        self.toolButton_C1.setObjectName("toolButton_C1")
        self.horizontalLayout_3.addWidget(self.toolButton_C1)
        self.toolButton_C2 = QtWidgets.QToolButton(self.groupBox_3)
        self.toolButton_C2.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("Icons/icons8-affinity-publisher-48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButton_C2.setIcon(icon8)
        self.toolButton_C2.setObjectName("toolButton_C2")
        self.horizontalLayout_3.addWidget(self.toolButton_C2)
        self.toolButton_C3 = QtWidgets.QToolButton(self.groupBox_3)
        self.toolButton_C3.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("Icons/icons8-metamorphose-100.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButton_C3.setIcon(icon9)
        self.toolButton_C3.setObjectName("toolButton_C3")
        self.horizontalLayout_3.addWidget(self.toolButton_C3)
        self.toolButton_C4 = QtWidgets.QToolButton(self.groupBox_3)
        self.toolButton_C4.setText("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("Icons/icons8-audio-wave2-100.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButton_C4.setIcon(icon10)
        self.toolButton_C4.setObjectName("toolButton_C4")
        self.horizontalLayout_3.addWidget(self.toolButton_C4)
        self.toolButton_C5 = QtWidgets.QToolButton(self.groupBox_3)
        self.toolButton_C5.setText("")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("Icons/icons8-hierarchical-structure-64.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButton_C5.setIcon(icon11)
        self.toolButton_C5.setObjectName("toolButton_C5")
        self.horizontalLayout_3.addWidget(self.toolButton_C5)
        self.toolButton_C6 = QtWidgets.QToolButton(self.groupBox_3)
        self.toolButton_C6.setText("")
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("Icons/icons8-detikberitaid-48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButton_C6.setIcon(icon12)
        self.toolButton_C6.setObjectName("toolButton_C6")
        self.horizontalLayout_3.addWidget(self.toolButton_C6)
        self.gridLayout_3.addLayout(self.horizontalLayout_3, 0, 0, 1, 1)
        self.horizontalLayout_5.addWidget(self.groupBox_3)
        self.groupBox_4 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_4.setMinimumSize(QtCore.QSize(0, 0))
        self.groupBox_4.setMaximumSize(QtCore.QSize(16777215, 70))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_4.setFont(font)
        self.groupBox_4.setObjectName("groupBox_4")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.groupBox_4)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.toolButton_H1 = QtWidgets.QToolButton(self.groupBox_4)
        self.toolButton_H1.setText("")
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("Icons/icons8-h-32.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButton_H1.setIcon(icon13)
        self.toolButton_H1.setObjectName("toolButton_H1")
        self.horizontalLayout_4.addWidget(self.toolButton_H1)
        self.toolButton_H2 = QtWidgets.QToolButton(self.groupBox_4)
        self.toolButton_H2.setText("")
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap("Icons/icons8-a-32.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolButton_H2.setIcon(icon14)
        self.toolButton_H2.setObjectName("toolButton_H2")
        self.horizontalLayout_4.addWidget(self.toolButton_H2)
        self.gridLayout_4.addLayout(self.horizontalLayout_4, 0, 0, 1, 1)
        self.horizontalLayout_5.addWidget(self.groupBox_4)
        self.horizontalLayout_6.addLayout(self.horizontalLayout_5)
        self.verticalLayout.addLayout(self.horizontalLayout_6)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.groupBox_5 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_5.setMinimumSize(QtCore.QSize(500, 350))
        self.groupBox_5.setMaximumSize(QtCore.QSize(500, 350))
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.groupBox_5.setFont(font)
        self.groupBox_5.setObjectName("groupBox_5")
        self.label_In = QtWidgets.QLabel(self.groupBox_5)
        self.label_In.setGeometry(QtCore.QRect(10, 20, 431, 261))
        self.label_In.setText("")
        self.label_In.setObjectName("label_In")
        self.horizontalLayout_7.addWidget(self.groupBox_5)
        self.groupBox_6 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_6.setMinimumSize(QtCore.QSize(500, 350))
        self.groupBox_6.setMaximumSize(QtCore.QSize(500, 350))
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.groupBox_6.setFont(font)
        self.groupBox_6.setObjectName("groupBox_6")
        self.label__Fin = QtWidgets.QLabel(self.groupBox_6)
        self.label__Fin.setGeometry(QtCore.QRect(10, 20, 431, 261))
        self.label__Fin.setText("")
        self.label__Fin.setObjectName("label__Fin")
        self.horizontalLayout_7.addWidget(self.groupBox_6)
        self.verticalLayout.addLayout(self.horizontalLayout_7)
        self.verticalLayout_8.addLayout(self.verticalLayout)
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setMinimumSize(QtCore.QSize(250, 10))
        self.label_6.setMaximumSize(QtCore.QSize(16777215, 10))
        self.label_6.setObjectName("label_6")
        self.verticalLayout_7.addWidget(self.label_6)
        self.listWidget_Info = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget_Info.setObjectName("listWidget_Info")
        self.verticalLayout_7.addWidget(self.listWidget_Info)
        self.verticalLayout_8.addLayout(self.verticalLayout_7)
        self.horizontalLayout_8.addLayout(self.verticalLayout_8)
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setMinimumSize(QtCore.QSize(250, 10))
        self.label_3.setMaximumSize(QtCore.QSize(16777215, 10))
        self.label_3.setObjectName("label_3")
        self.verticalLayout_2.addWidget(self.label_3)
        self.listView_Hubs = QtWidgets.QListView(self.centralwidget)
        self.listView_Hubs.setMinimumSize(QtCore.QSize(250, 40))
        self.listView_Hubs.setMaximumSize(QtCore.QSize(16777215, 40))
        self.listView_Hubs.setObjectName("listView_Hubs")
        self.verticalLayout_2.addWidget(self.listView_Hubs)
        self.verticalLayout_4.addLayout(self.verticalLayout_2)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setMinimumSize(QtCore.QSize(250, 10))
        self.label_4.setMaximumSize(QtCore.QSize(16777215, 10))
        self.label_4.setObjectName("label_4")
        self.verticalLayout_3.addWidget(self.label_4)
        self.listView_Nodes = QtWidgets.QListView(self.centralwidget)
        self.listView_Nodes.setMinimumSize(QtCore.QSize(250, 90))
        self.listView_Nodes.setMaximumSize(QtCore.QSize(16777215, 150))
        self.listView_Nodes.setObjectName("listView_Nodes")
        self.verticalLayout_3.addWidget(self.listView_Nodes)
        self.toolButton_Run = QtWidgets.QToolButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolButton_Run.sizePolicy().hasHeightForWidth())
        self.toolButton_Run.setSizePolicy(sizePolicy)
        self.toolButton_Run.setMinimumSize(QtCore.QSize(250, 40))
        self.toolButton_Run.setMaximumSize(QtCore.QSize(16777215, 40))
        self.toolButton_Run.setObjectName("toolButton_Run")
        self.verticalLayout_3.addWidget(self.toolButton_Run)
        self.verticalLayout_4.addLayout(self.verticalLayout_3)
        self.verticalLayout_6.addLayout(self.verticalLayout_4)
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setMinimumSize(QtCore.QSize(250, 10))
        self.label_5.setMaximumSize(QtCore.QSize(16777215, 10))
        self.label_5.setObjectName("label_5")
        self.verticalLayout_5.addWidget(self.label_5)
        self.listWidget_Result = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget_Result.setObjectName("listWidget_Result")
        self.verticalLayout_5.addWidget(self.listWidget_Result)
        self.verticalLayout_6.addLayout(self.verticalLayout_5)
        self.horizontalLayout_8.addLayout(self.verticalLayout_6)
        self.formLayout.setLayout(0, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_8)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1307, 26))
        self.menubar.setObjectName("menubar")
        self.menu_File = QtWidgets.QMenu(self.menubar)
        self.menu_File.setObjectName("menu_File")
        self.menu_Export_As = QtWidgets.QMenu(self.menu_File)
        self.menu_Export_As.setIcon(icon3)
        self.menu_Export_As.setObjectName("menu_Export_As")
        self.menu_Edit = QtWidgets.QMenu(self.menubar)
        self.menu_Edit.setObjectName("menu_Edit")
        self.menu_Clear = QtWidgets.QMenu(self.menu_Edit)
        self.menu_Clear.setIcon(icon4)
        self.menu_Clear.setObjectName("menu_Clear")
        self.menu_Undo = QtWidgets.QMenu(self.menu_Edit)
        self.menu_Undo.setIcon(icon5)
        self.menu_Undo.setObjectName("menu_Undo")
        self.menu_Redo = QtWidgets.QMenu(self.menu_Edit)
        self.menu_Redo.setIcon(icon6)
        self.menu_Redo.setObjectName("menu_Redo")
        self.menuClustering = QtWidgets.QMenu(self.menubar)
        self.menuClustering.setObjectName("menuClustering")
        self.menu_Heuristics = QtWidgets.QMenu(self.menubar)
        self.menu_Heuristics.setObjectName("menu_Heuristics")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action_oPEN_dATA = QtWidgets.QAction(MainWindow)
        self.action_oPEN_dATA.setIcon(icon1)
        self.action_oPEN_dATA.setObjectName("action_oPEN_dATA")
        self.action_Save_Initial_Solution = QtWidgets.QAction(MainWindow)
        self.action_Save_Initial_Solution.setCheckable(True)
        self.action_Save_Initial_Solution.setEnabled(False)
        self.action_Save_Initial_Solution.setIcon(icon2)
        self.action_Save_Initial_Solution.setObjectName("action_Save_Initial_Solution")
        self.action_Save_Final_Solution = QtWidgets.QAction(MainWindow)
        self.action_Save_Final_Solution.setCheckable(True)
        self.action_Save_Final_Solution.setEnabled(False)
        self.action_Save_Final_Solution.setIcon(icon2)
        self.action_Save_Final_Solution.setObjectName("action_Save_Final_Solution")
        self.action_Exit = QtWidgets.QAction(MainWindow)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap("Icons/icons8-close-48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Exit.setIcon(icon15)
        self.action_Exit.setObjectName("action_Exit")
        self.action_Initial_Solution = QtWidgets.QAction(MainWindow)
        self.action_Initial_Solution.setCheckable(True)
        self.action_Initial_Solution.setEnabled(False)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap("Icons/icons8-incoming-data-48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Initial_Solution.setIcon(icon16)
        self.action_Initial_Solution.setObjectName("action_Initial_Solution")
        self.action_Final_Solution = QtWidgets.QAction(MainWindow)
        self.action_Final_Solution.setCheckable(True)
        self.action_Final_Solution.setEnabled(False)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap("Icons/icons8-outgoing-data-48.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Final_Solution.setIcon(icon17)
        self.action_Final_Solution.setObjectName("action_Final_Solution")
        self.action_Initial_Solution_2 = QtWidgets.QAction(MainWindow)
        self.action_Initial_Solution_2.setCheckable(True)
        self.action_Initial_Solution_2.setEnabled(False)
        self.action_Initial_Solution_2.setIcon(icon16)
        self.action_Initial_Solution_2.setObjectName("action_Initial_Solution_2")
        self.action_Initial_Solution_3 = QtWidgets.QAction(MainWindow)
        self.action_Initial_Solution_3.setCheckable(True)
        self.action_Initial_Solution_3.setEnabled(False)
        self.action_Initial_Solution_3.setIcon(icon16)
        self.action_Initial_Solution_3.setObjectName("action_Initial_Solution_3")
        self.action_Initial_Solution_4 = QtWidgets.QAction(MainWindow)
        self.action_Initial_Solution_4.setCheckable(True)
        self.action_Initial_Solution_4.setEnabled(False)
        self.action_Initial_Solution_4.setIcon(icon16)
        self.action_Initial_Solution_4.setObjectName("action_Initial_Solution_4")
        self.action_Final_Solution_2 = QtWidgets.QAction(MainWindow)
        self.action_Final_Solution_2.setCheckable(True)
        self.action_Final_Solution_2.setEnabled(False)
        self.action_Final_Solution_2.setIcon(icon17)
        self.action_Final_Solution_2.setObjectName("action_Final_Solution_2")
        self.action_Final_Solution_3 = QtWidgets.QAction(MainWindow)
        self.action_Final_Solution_3.setCheckable(True)
        self.action_Final_Solution_3.setEnabled(False)
        self.action_Final_Solution_3.setIcon(icon17)
        self.action_Final_Solution_3.setObjectName("action_Final_Solution_3")
        self.action_Final_Solution_4 = QtWidgets.QAction(MainWindow)
        self.action_Final_Solution_4.setCheckable(True)
        self.action_Final_Solution_4.setEnabled(False)
        self.action_Final_Solution_4.setIcon(icon17)
        self.action_Final_Solution_4.setObjectName("action_Final_Solution_4")
        self.action_K_Means = QtWidgets.QAction(MainWindow)
        self.action_K_Means.setIcon(icon7)
        self.action_K_Means.setObjectName("action_K_Means")
        self.action_Affinitiy_Propagation = QtWidgets.QAction(MainWindow)
        self.action_Affinitiy_Propagation.setIcon(icon8)
        self.action_Affinitiy_Propagation.setObjectName("action_Affinitiy_Propagation")
        self.action_Means_Shift = QtWidgets.QAction(MainWindow)
        self.action_Means_Shift.setIcon(icon9)
        self.action_Means_Shift.setObjectName("action_Means_Shift")
        self.action_Spectral_Clustering = QtWidgets.QAction(MainWindow)
        self.action_Spectral_Clustering.setIcon(icon10)
        self.action_Spectral_Clustering.setObjectName("action_Spectral_Clustering")
        self.action_Hierarchical_Clustering = QtWidgets.QAction(MainWindow)
        self.action_Hierarchical_Clustering.setIcon(icon11)
        self.action_Hierarchical_Clustering.setObjectName("action_Hierarchical_Clustering")
        self.action_DBSCAN = QtWidgets.QAction(MainWindow)
        self.action_DBSCAN.setIcon(icon12)
        self.action_DBSCAN.setObjectName("action_DBSCAN")
        self.action_Hill_Climbing = QtWidgets.QAction(MainWindow)
        self.action_Hill_Climbing.setCheckable(True)
        self.action_Hill_Climbing.setEnabled(False)
        self.action_Hill_Climbing.setIcon(icon13)
        self.action_Hill_Climbing.setObjectName("action_Hill_Climbing")
        self.action_Simulated_Anneling = QtWidgets.QAction(MainWindow)
        self.action_Simulated_Anneling.setCheckable(True)
        self.action_Simulated_Anneling.setEnabled(False)
        self.action_Simulated_Anneling.setIcon(icon14)
        self.action_Simulated_Anneling.setObjectName("action_Simulated_Anneling")
        self.menu_Export_As.addAction(self.action_Initial_Solution)
        self.menu_Export_As.addAction(self.action_Final_Solution)
        self.menu_File.addAction(self.action_oPEN_dATA)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.action_Save_Initial_Solution)
        self.menu_File.addAction(self.action_Save_Final_Solution)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.menu_Export_As.menuAction())
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.action_Exit)
        self.menu_Clear.addAction(self.action_Initial_Solution_2)
        self.menu_Clear.addAction(self.action_Final_Solution_2)
        self.menu_Undo.addAction(self.action_Initial_Solution_3)
        self.menu_Undo.addAction(self.action_Final_Solution_3)
        self.menu_Redo.addAction(self.action_Initial_Solution_4)
        self.menu_Redo.addAction(self.action_Final_Solution_4)
        self.menu_Edit.addAction(self.menu_Clear.menuAction())
        self.menu_Edit.addSeparator()
        self.menu_Edit.addAction(self.menu_Undo.menuAction())
        self.menu_Edit.addAction(self.menu_Redo.menuAction())
        self.menuClustering.addAction(self.action_K_Means)
        self.menuClustering.addAction(self.action_Affinitiy_Propagation)
        self.menuClustering.addAction(self.action_Means_Shift)
        self.menuClustering.addAction(self.action_Spectral_Clustering)
        self.menuClustering.addAction(self.action_Hierarchical_Clustering)
        self.menuClustering.addAction(self.action_DBSCAN)
        self.menu_Heuristics.addAction(self.action_Hill_Climbing)
        self.menu_Heuristics.addAction(self.action_Simulated_Anneling)
        self.menubar.addAction(self.menu_File.menuAction())
        self.menubar.addAction(self.menu_Edit.menuAction())
        self.menubar.addAction(self.menuClustering.menuAction())
        self.menubar.addAction(self.menu_Heuristics.menuAction())
        
                
        self.toolButton_I1.setEnabled(False)
        self.toolButton_I2.setEnabled(False)
        self.toolButton_I3.setEnabled(False)
        self.toolButton_I4.setEnabled(False)
        self.toolButton_I5.setEnabled(False)
        self.toolButton_F1.setEnabled(False)
        self.toolButton_F2.setEnabled(False)
        self.toolButton_F3.setEnabled(False)
        self.toolButton_F4.setEnabled(False)
        self.toolButton_F5.setEnabled(False)
        self.toolButton_C1.setEnabled(False)
        self.toolButton_C2.setEnabled(False)
        self.toolButton_C3.setEnabled(False)
        self.toolButton_C4.setEnabled(False)
        self.toolButton_C5.setEnabled(False)
        self.toolButton_C6.setEnabled(False)
        self.toolButton_H1.setEnabled(False)
        self.toolButton_H2.setEnabled(False)
        self.toolButton_Run.setEnabled(False)
        self.action_Affinitiy_Propagation.setEnabled(False)
        self.action_DBSCAN.setEnabled(False)
        self.action_Hierarchical_Clustering.setEnabled(False)
        self.action_K_Means.setEnabled(False)
        self.action_Means_Shift.setEnabled(False)
        self.action_Spectral_Clustering.setEnabled(False)

        self.action_Exit.triggered.connect(MainWindow.close)
        
        self.toolButton.clicked.connect(self.openData)
        self.action_oPEN_dATA.triggered.connect(self.openData)
 
        self.toolButton_I3.clicked.connect(self.clearInit)
        self.action_Initial_Solution_2.triggered.connect(self.clearInit)
        
        self.toolButton_F2.clicked.connect(self.ExportFin)
        self.action_Final_Solution.triggered.connect(self.ExportFin)
        
        self.toolButton_I2.clicked.connect(self.ExportIn)
        self.action_Initial_Solution.triggered.connect(self.ExportIn)
        
        self.toolButton_I1.clicked.connect(self.SaveIn)
        self.action_Save_Initial_Solution.triggered.connect(self.SaveIn)
        
        self.toolButton_F1.clicked.connect(self.SaveFin)
        self.action_Save_Final_Solution.triggered.connect(self.SaveFin)
        
        self.toolButton_F3.clicked.connect(self.clearFin)
        self.action_Final_Solution_2.triggered.connect(self.clearFin)
                

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Hub Allocation U.I."))
        self.groupBox.setTitle(_translate("MainWindow", "Initial Solution"))
        self.groupBox_2.setTitle(_translate("MainWindow", "Final Solution"))
        self.groupBox_3.setTitle(_translate("MainWindow", "Clustering"))
        self.groupBox_4.setTitle(_translate("MainWindow", "Heuristics"))
        self.groupBox_5.setTitle(_translate("MainWindow", "Initial Solution"))
        self.groupBox_6.setTitle(_translate("MainWindow", "Final Solution"))
        self.label_6.setText(_translate("MainWindow", "Information Panel"))
        self.label_3.setText(_translate("MainWindow", "Hubs"))
        self.label_4.setText(_translate("MainWindow", "Nodes"))
        self.toolButton_Run.setText(_translate("MainWindow", "RUN"))
        self.label_5.setText(_translate("MainWindow", "Results"))
        self.menu_File.setTitle(_translate("MainWindow", "&File"))
        self.menu_Export_As.setTitle(_translate("MainWindow", "&Export As"))
        self.menu_Edit.setTitle(_translate("MainWindow", "&Edit"))
        self.menu_Clear.setTitle(_translate("MainWindow", "&Clear"))
        self.menu_Undo.setTitle(_translate("MainWindow", "&Undo"))
        self.menu_Redo.setTitle(_translate("MainWindow", "&Redo"))
        self.menuClustering.setTitle(_translate("MainWindow", "Clustering"))
        self.menu_Heuristics.setTitle(_translate("MainWindow", "&Heuristics"))
        self.action_oPEN_dATA.setText(_translate("MainWindow", "&Open Data"))
        self.action_oPEN_dATA.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.action_Save_Initial_Solution.setText(_translate("MainWindow", "&Save Initial Solution"))
        self.action_Save_Initial_Solution.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.action_Save_Final_Solution.setText(_translate("MainWindow", "&Save Final Solution"))
        self.action_Exit.setText(_translate("MainWindow", "&Exit"))
        self.action_Exit.setShortcut(_translate("MainWindow", "Shift+F4"))
        self.action_Initial_Solution.setText(_translate("MainWindow", "&Initial Solution"))
        self.action_Final_Solution.setText(_translate("MainWindow", "&Final Solution"))
        self.action_Initial_Solution_2.setText(_translate("MainWindow", "&Initial Solution"))
        self.action_Initial_Solution_2.setShortcut(_translate("MainWindow", "Ctrl+L"))
        self.action_Initial_Solution_3.setText(_translate("MainWindow", "&Initial Solution"))
        self.action_Initial_Solution_3.setShortcut(_translate("MainWindow", "Ctrl+Left"))
        self.action_Initial_Solution_4.setText(_translate("MainWindow", "&Initial Solution"))
        self.action_Initial_Solution_4.setShortcut(_translate("MainWindow", "Ctrl+Right"))
        self.action_Final_Solution_2.setText(_translate("MainWindow", "&Final Solution"))
        self.action_Final_Solution_2.setShortcut(_translate("MainWindow", "Ctrl+Shift+L"))
        self.action_Final_Solution_3.setText(_translate("MainWindow", "&Final Solution"))
        self.action_Final_Solution_3.setShortcut(_translate("MainWindow", "Ctrl+Shift+Left"))
        self.action_Final_Solution_4.setText(_translate("MainWindow", "&Final Solution"))
        self.action_Final_Solution_4.setShortcut(_translate("MainWindow", "Ctrl+Shift+Right"))
        self.action_K_Means.setText(_translate("MainWindow", "&K-Means"))
        self.action_K_Means.setShortcut(_translate("MainWindow", "Ctrl++"))
        self.action_Affinitiy_Propagation.setText(_translate("MainWindow", "&Affinitiy Propagation"))
        self.action_Affinitiy_Propagation.setShortcut(_translate("MainWindow", "Ctrl+-"))
        self.action_Means_Shift.setText(_translate("MainWindow", "&Means-Shift"))
        self.action_Spectral_Clustering.setText(_translate("MainWindow", "&Spectral Clustering"))
        self.action_Hierarchical_Clustering.setText(_translate("MainWindow", "&Hierarchical Clustering"))
        self.action_DBSCAN.setText(_translate("MainWindow", "&DBSCAN"))
        self.action_Hill_Climbing.setText(_translate("MainWindow", "&Hill Climbing"))
        self.action_Hill_Climbing.setShortcut(_translate("MainWindow", "Shift+S"))
        self.action_Simulated_Anneling.setText(_translate("MainWindow", "&Simulated Annealing"))
        self.action_Simulated_Anneling.setShortcut(_translate("MainWindow", "Ctrl+B"))
        
        
        
        
        
    ## @brief Saves data to text file.
    # @details User selects a file to save and writes the data in listWidget_Info to the selected file.
    # @return None
    def SaveIn(self):
        file, _ = QFileDialog.getSaveFileName(None, "Dosya Kaydet", "", "Metin Dosyaları (*.txt)")
    
        with open(file, "w") as f:
            for index in range(self.listWidget_Info.count()):
                item = self.listWidget_Info.item(index)
                f.write(item.text() + "\n")
    
    
    ## @brief Saves results to text file.
    # @details User selects a file to save and writes the data in listWidget_Result to the selected file.
    #  @return None
    def SaveFin(self):
        file, _ = QFileDialog.getSaveFileName(None, "Dosya Kaydet", "", "Metin Dosyaları (*.txt)")
    
        with open(file, "w") as f:
            for index in range(self.listWidget_Result.count()):
                item = self.listWidget_Result.item(index)
                f.write(item.text() + "\n")
    
    
    ## @brief Exports the login image.
    # @details Makes the user select a file to export and saves the image on the label_In to the selected file.
    #  @return None
    def ExportIn(self):
        label = self.label_In
        pixmap = label.pixmap()
    
        if pixmap:
            file, _ = QFileDialog.getSaveFileName(None, "Dosya Kaydet", "", "JPEG Dosyaları (*.jpeg);;PNG Dosyaları (*.png)")
    
            if file:
                pixmap.save(file)
    
    
    ## @brief Exports the output image.
    # @details Makes the user select a file to export and saves the image on label__Fin to the selected file..
    #  @return None
    def ExportFin(self):
        label = self.label__Fin
        pixmap = label.pixmap()
    
        if pixmap:
            file, _ = QFileDialog.getSaveFileName(None, "Dosya Kaydet", "", "JPEG Dosyaları (*.jpeg);;PNG Dosyaları (*.png)")
    
            if file:
                pixmap.save(file)
    
        
    
    
    
    ## @brief Clears the last state.
    # @details Clears the last state and resets the results and availability states found in the UI.
    #  @return None    
    def clearFin(self):
        self.toolButton_F1.setEnabled(False)
        self.toolButton_F2.setEnabled(False)
        self.toolButton_F3.setEnabled(False)
        self.toolButton_F4.setEnabled(False)
        self.toolButton_F5.setEnabled(False)
        
        self.action_Save_Final_Solution.setEnabled(False)
        self.action_Final_Solution.setEnabled(False)
        self.action_Final_Solution_2.setEnabled(False)
        self.action_Final_Solution_3.setEnabled(False)
        self.action_Final_Solution_4.setEnabled(False)
        self.listWidget_Result.clear()

        self.label__Fin.clear()

        
        
        
        

    ## @brief Clears initial state and restores default settings.
    # @details Clears the initial state and returns the UI to its default settings.
    #  @return None  
        
    def clearInit(self):
        self.toolButton_I1.setEnabled(True)
        self.toolButton_I2.setEnabled(True)
        self.toolButton_I3.setEnabled(True)
        self.toolButton_I4.setEnabled(True)
        self.toolButton_I5.setEnabled(True)
        self.action_Save_Initial_Solution.setEnabled(True)
        self.action_Initial_Solution.setEnabled(True)
        self.action_Initial_Solution_2.setEnabled(True)
        self.action_Initial_Solution_3.setEnabled(True)
        self.action_Initial_Solution_4.setEnabled(True)
        
        
        self.toolButton_H2.setEnabled(False)
        self.toolButton_H1.setEnabled(False)
        self.action_Simulated_Anneling.setEnabled(False)
        self.action_Hill_Climbing.setEnabled(False)
        
        self.listWidget_Info.clear()
        self.clearFin()

        
        # self.label_In.clear()
        
        pixmap = QPixmap("First.jpg")
        self.label_In.setPixmap(pixmap)
        self.label_In.adjustSize()
        
        
    
     
        
    ## @brief Performs the file decompression and loads the image.
    # @details Allows the user to select a file and loads the selected image.
    #  @return None
    def openData(self):
        file, _ = QFileDialog.getOpenFileName(None, "QFileDialog.getOpenFileName()", "", "TXT Files (*.txt)")
    
        if file:
            with open(file) as data:
                p = data.read().splitlines()
    
            x_coor = []
            y_coor = []
    
            for point in p:
                x, y = point.split()
                x_coor.append(float(x))
                y_coor.append(float(y))
            plt.clf()
            plt.plot(x_coor, y_coor, 'ko')
            plt.xlabel('X Coordinate')
            plt.ylabel('Y Coordinate')
    
            plt.grid(True)
    
            for i, (x, y) in enumerate(zip(x_coor, y_coor)):
                plt.text(x, y, str(i+1), ha='center', va='bottom')
    
            plt.savefig("First.jpg", format='jpeg')
            plt.savefig("Plot.jpg", format='jpeg')
    
            new_file = os.path.join(os.path.dirname(__file__), "Points.txt")
            with open(new_file, 'w') as output_file:
                for point in p:
                    output_file.write(point + '\n')
    
            pixmap = QPixmap("Plot.jpg")
            self.label_In.setPixmap(pixmap)
            self.label_In.adjustSize()
    
            self.toolButton_C1.setEnabled(True)
            self.toolButton_C2.setEnabled(True)
            self.toolButton_C3.setEnabled(True)
            self.toolButton_C4.setEnabled(True)
            self.toolButton_C5.setEnabled(True)
            self.toolButton_C6.setEnabled(True)
            self.action_K_Means.setEnabled(True)
            self.action_Affinitiy_Propagation.setEnabled(True)
            self.action_Means_Shift.setEnabled(True)
            self.action_Spectral_Clustering.setEnabled(True)
            self.action_Hierarchical_Clustering.setEnabled(True)
            self.action_DBSCAN.setEnabled(True)
            self.toolButton_I1.setEnabled(True)
            self.toolButton_I2.setEnabled(True)
            self.toolButton_I3.setEnabled(True)
            self.toolButton_I4.setEnabled(True)
            self.toolButton_I5.setEnabled(True)
            self.action_Save_Initial_Solution.setEnabled(True)
            self.action_Initial_Solution.setEnabled(True)
            self.action_Initial_Solution_2.setEnabled(True)
            self.action_Initial_Solution_3.setEnabled(True)
            self.action_Initial_Solution_4.setEnabled(True)
    


